---
- name: Installation of Crowdstrike Agent 
  hosts: 
  gather_facts: false

  tasks:
    - name: disable windows Defender
      win_shell: Set-MpPreference-DisableRealtimeMonitoring $true
      register: defender_result

    - name: Including Services variable
      include_vars:
        file: services_variables.yml

    - name: Check Required Services are Running
      win_service:
        name: "{{ item }}"
        state: started
      loop: "{{ services_to_check }}"
      register: service_result
  
    - name: Display the Service Status Report
      debug:
        var: service_result

    - name: Generate CSV Report
      csv_file:
        path: service_report.csv
        delimiter: ','
        header:
          - Service
          - Status
        content: |
          {% for item in services_to_check %}
          - "{{ item }}"
          - "{{ service_result.results[loop.index].state }}"
          {% endfor %}

    - name: Include CrowdStrike variables
      include_vars:
        file: crowdstrike_variables.yml
     
    - name: Copy Crowdstrike Agent to Target Server
      win_copy: 
        src: 
        dest: C:/Atos/Tools/

    - name: Run Crowdstrike Agent Installation
      win_shell: |
        Start-Process -FilePath ""C:\Atos\Tools\WindowsSensor.LionLanner.exe"" -ArgumentList ""/install /quiet /norestart APP_PROXYNAME=internet.services.royalmailgroup.net APP_PROXYPORT=8080 ProvNoWait=1 PROXYDISABLE=1 CID=960DBDCEAB1F43618092B6DB574A95C5-C6"" -Wait"

    - name: Confirm Agent Installation
      win_shell: sc.exe query csagent
      register: agent_installation_result

    - name: Debug Agent Installation Result
      debug:
        var: agent_installation_result

    - name: Check sensor is connected to cloud or not
      win_shell: |
        $netstatOutput = netstat -f
        if ($netstatOutput -match ""rmgp\.royalmailgroup\.net:8080.*ESTABLISHED"") {
            Write-Host ""Connected To Cloud Console ""
        }
        else{
            Write-Host ""Not connected To Cloud Console""
        }

    - name: Email report
      mail:
        host: 
        port: 25
        subject: "Ansible Automation Report"
        body: "The Ansible automation has completed successfully."
        sender: "automation@example.com"
        recipients: "admin@example.com"

